#pragma once

#include "esphome/core/hal.h"

namespace esphome {
namespace wmbus {

enum SX127xReg : uint8_t {
  // Common registers
  REG_FIFO = 0x00,
  REG_OP_MODE = 0x01,
  REG_BITRATE_MSB = 0x02,
  REG_BITRATE_LSB = 0x03,
  REG_FDEV_MSB = 0x04,
  REG_FDEV_LSB = 0x05,
  REG_FRF_MSB = 0x06,
  REG_FRF_MID = 0x07,
  REG_FRF_LSB = 0x08,
  REG_PA_CONFIG = 0x09,
  REG_PA_RAMP = 0x0A,
  REG_DIO_MAPPING1 = 0x40,
  REG_DIO_MAPPING2 = 0x41,
  REG_VERSION = 0x42,
  REG_IRQFLAGS1 = 0x3E,
  REG_IRQFLAGS2 = 0x3F,
  // FSK/OOK registers
  REG_RX_CONFIG = 0x0D,
  REG_RSSI_THRESH = 0x10,
  REG_RX_BW = 0x12,
  REG_OOK_PEAK = 0x14,
  REG_OOK_FIX = 0x15,
  REG_OOK_AVG = 0x16,
  REG_AFC_FEI = 0x1A,
  REG_PREAMBLE_DETECT = 0x1F,
  REG_PREAMBLE_SIZE_MSB = 0x25,
  REG_PREAMBLE_SIZE_LSB = 0x26,
  REG_SYNC_CONFIG = 0x27,
  REG_SYNC_VALUE1 = 0x28,
  REG_SYNC_VALUE2 = 0x29,
  REG_SYNC_VALUE3 = 0x2A,
  REG_SYNC_VALUE4 = 0x2B,
  REG_SYNC_VALUE5 = 0x2C,
  REG_SYNC_VALUE6 = 0x2D,
  REG_SYNC_VALUE7 = 0x2E,
  REG_SYNC_VALUE8 = 0x2F,
  REG_PACKET_CONFIG_1 = 0x30,
  REG_PACKET_CONFIG_2 = 0x31,
  REG_PAYLOAD_LENGTH_LSB = 0x32,
  REG_FIFO_THRESH = 0x35,
  REG_IMAGE_CAL = 0x3B,
};

enum SX127xRegIrqFlags2 : uint8_t {
  RF_IRQFLAGS2_FIFOFULL = 0x80,
  RF_IRQFLAGS2_FIFOEMPTY = 0x40,
  RF_IRQFLAGS2_FIFOLEVEL = 0x20,
  RF_IRQFLAGS2_FIFOOVERRUN = 0x10,
  RF_IRQFLAGS2_PACKETSENT = 0x08,
  RF_IRQFLAGS2_PAYLOADREADY = 0x04,
  RF_IRQFLAGS2_CRCOK = 0x02,
  RF_IRQFLAGS2_LOWBAT = 0x01,
};

enum SX127xPacketConfig1 : uint8_t {
  CRC_ON = 0x10,
  CRC_OFF = 0x00,
  RF_PACKETCONFIG1_PACKETFORMAT_MASK            = 0x7F,
  RF_PACKETCONFIG1_PACKETFORMAT_FIXED           = 0x00,
  RF_PACKETCONFIG1_PACKETFORMAT_VARIABLE        = 0x80,  // Default
  RF_PACKETCONFIG1_DCFREE_MASK                  = 0x9F,
  RF_PACKETCONFIG1_DCFREE_OFF                   = 0x00,  // Default
  RF_PACKETCONFIG1_DCFREE_MANCHESTER            = 0x20,
  RF_PACKETCONFIG1_DCFREE_WHITENING             = 0x40,
  RF_PACKETCONFIG1_CRC_MASK                     = 0xEF,
  RF_PACKETCONFIG1_CRC_ON                       = 0x10,  // Default
  RF_PACKETCONFIG1_CRC_OFF                      = 0x00,
  RF_PACKETCONFIG1_CRCAUTOCLEAR_MASK            = 0xF7,
  RF_PACKETCONFIG1_CRCAUTOCLEAR_ON              = 0x00,  // Default
  RF_PACKETCONFIG1_CRCAUTOCLEAR_OFF             = 0x08,
  RF_PACKETCONFIG1_ADDRSFILTERING_MASK          = 0xF9,
  RF_PACKETCONFIG1_ADDRSFILTERING_OFF           = 0x00,  // Default
  RF_PACKETCONFIG1_ADDRSFILTERING_NODE          = 0x02,
  RF_PACKETCONFIG1_ADDRSFILTERING_NODEBROADCAST = 0x04,
  RF_PACKETCONFIG1_CRCWHITENINGTYPE_MASK        = 0xFE,
  RF_PACKETCONFIG1_CRCWHITENINGTYPE_CCITT       = 0x00,  // Default
  RF_PACKETCONFIG1_CRCWHITENINGTYPE_IBM         = 0x01,
};

enum SX127xPacketConfig2 : uint8_t {
  CONTINUOUS_MODE = 0x00,
  PACKET_MODE = 0x40,
  RF_PACKETCONFIG2_WMBUS_CRC_ENABLE_MASK     = 0x7F, 
  RF_PACKETCONFIG2_WMBUS_CRC_ENABLE          = 0x80,
  RF_PACKETCONFIG2_WMBUS_CRC_DISABLE         = 0x00,  // Default
  RF_PACKETCONFIG2_DATAMODE_MASK             = 0xBF,
  RF_PACKETCONFIG2_DATAMODE_CONTINUOUS       = 0x00,
  RF_PACKETCONFIG2_DATAMODE_PACKET           = 0x40,  // Default
  RF_PACKETCONFIG2_IOHOME_MASK               = 0xDF,
  RF_PACKETCONFIG2_IOHOME_ON                 = 0x20,
  RF_PACKETCONFIG2_IOHOME_OFF                = 0x00,  // Default
  RF_PACKETCONFIG2_BEACON_MASK               = 0xF7,
  RF_PACKETCONFIG2_BEACON_ON                 = 0x08,
  RF_PACKETCONFIG2_BEACON_OFF                = 0x00,  // Default
  RF_PACKETCONFIG2_PAYLOADLENGTH_MSB_MASK    = 0xF8,
};

enum SX127xOpMode : uint8_t {
  ACCESS_FSK_REGS = 0x40,
  MOD_FSK = 0x00,
  ACCESS_LF_REGS = 0x08,
  ACCESS_HF_REGS = 0x00,
  MODE_CAD = 0x07,
  MODE_RX_SINGLE = 0x06,
  MODE_RX = 0x05,
  MODE_RX_FS = 0x04,
  MODE_STDBY = 0x01,
  MODE_SLEEP = 0x00,
  MODE_MASK = 0x07,
};

enum SX127xDioMapping1 : uint8_t {
  DIO0_MAPPING_00 = 0x00,
  DIO0_MAPPING_01 = 0x40,
  DIO0_MAPPING_10 = 0x80,
  DIO0_MAPPING_11 = 0xC0,
};

enum SX127xRxConfig : uint8_t {
  RESTART_ON_COLLISION = 0x80,
  RESTART_NO_LOCK = 0x40,
  RESTART_PLL_LOCK = 0x20,
  AFC_AUTO_ON = 0x10,
  AGC_AUTO_ON = 0x08,
  TRIGGER_NONE = 0x00,
  TRIGGER_RSSI = 0x01,
  TRIGGER_PREAMBLE = 0x06,
  TRIGGER_ALL = 0x07,
};

enum SX127xRxBw : uint8_t {
  RX_BW_2_6 = 0x17,
  RX_BW_3_1 = 0x0F,
  RX_BW_3_9 = 0x07,
  RX_BW_5_2 = 0x16,
  RX_BW_6_3 = 0x0E,
  RX_BW_7_8 = 0x06,
  RX_BW_10_4 = 0x15,
  RX_BW_12_5 = 0x0D,
  RX_BW_15_6 = 0x05,
  RX_BW_20_8 = 0x14,
  RX_BW_25_0 = 0x0C,
  RX_BW_31_3 = 0x04,
  RX_BW_41_7 = 0x13,
  RX_BW_50_0 = 0x0B,
  RX_BW_62_5 = 0x03,
  RX_BW_83_3 = 0x12,
  RX_BW_100_0 = 0x0A,
  RX_BW_125_0 = 0x02,
  RX_BW_166_7 = 0x11,
  RX_BW_200_0 = 0x09,
  RX_BW_250_0 = 0x01,
};

enum SX127xAfcFei : uint8_t {
  AFC_AUTO_CLEAR_ON = 0x01,
};

enum SX127xPreambleDetect : uint8_t {
  PREAMBLE_DETECTOR_ON = 0x80,
  PREAMBLE_DETECTOR_OFF = 0x00,
  PREAMBLE_DETECTOR_SIZE_SHIFT = 5,
  PREAMBLE_DETECTOR_TOL_SHIFT = 0,
};

enum SX127xSyncConfig : uint8_t {
  AUTO_RESTART_PLL_LOCK = 0x80,
  AUTO_RESTART_NO_LOCK = 0x40,
  AUTO_RESTART_OFF = 0x00,
  PREAMBLE_55 = 0x20,
  PREAMBLE_AA = 0x00,
  SYNC_ON = 0x10,
  SYNC_OFF = 0x00,
};

enum SX127xFifoThresh : uint8_t {
  TX_START_FIFO_EMPTY = 0x80,
  TX_START_FIFO_LEVEL = 0x00,
};

enum SX127xImageCal : uint8_t {
  AUTO_IMAGE_CAL_ON = 0x80,
  IMAGE_CAL_START = 0x40,
  IMAGE_CAL_RUNNING = 0x20,
  TEMP_CHANGE = 0x08,
  TEMP_THRESHOLD_20C = 0x06,
  TEMP_THRESHOLD_15C = 0x04,
  TEMP_THRESHOLD_10C = 0x02,
  TEMP_THRESHOLD_5C = 0x00,
  TEMP_MONITOR_OFF = 0x01,
  TEMP_MONITOR_ON = 0x00,
};

enum SX127xIrqFlags : uint8_t {
  RX_TIMEOUT = 0x80,
  RX_DONE = 0x40,
  PAYLOAD_CRC_ERROR = 0x20,
  VALID_HEADER = 0x10,
  TX_DONE = 0x08,
  CAD_DONE = 0x04,
  FHSS_CHANGE_CHANNEL = 0x02,
  CAD_DETECTED = 0x01,
};

#define RESTART_RX_WITH_PLL_LOCK    0x20

}  // namespace wmbus
}  // namespace esphome
